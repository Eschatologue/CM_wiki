@use "../base/typeset";
@use "../base/table";
@use "../utility/convert";
@use "../palette/accent";

/*-------------------------------------------------------
    Base Styles
-------------------------------------------------------*/

.jost {
    font-family: var(--heading-font);
}

.jetbrains {
    font-size: calc(var(--gbl-font-size) * 0.85);
    font-family: var(--jetbrains);
    font-weight: 500 !important;
    word-spacing: convert.px2rem(-3px);
}

.f-lg {
    font-size: calc(var(--gbl-font-size) * 1.25) !important;
}

.nowrap {
    white-space: nowrap;
}

/*-------------------------------------------------------
    Utility Classes
-------------------------------------------------------*/

.hide {
    position: absolute;
    left: -9999px;
}

.noborder {
    border-bottom: none !important;
    margin: 0 0 convert.px2rem(-10px) 0 !important;
}

.align-center {
    text-align: center !important;
}

.align-right {
    text-align: right !important;
}

.vert-middle {
    vertical-align: middle !important;
}

.dt-centre dl dt {
    text-align: center;
}

/*-------------------------------------------------------
    Typography & Text Effects
-------------------------------------------------------*/

.em {
    @extend .disable-abbr;
    color: var(--md-gbl-text-color-strong);
}

.disable-abbr abbr {
    border-bottom: none !important;
}

// Small caps effect
.smallcap {
    font-size: calc(var(--gbl-font-size) * 1.1);
    font-variant: small-caps !important;
    letter-spacing: calc(var(--gbl-font-size) * 0.04) !important;

    :is(.emojione, .twemoji, .gemoji) {
        font-size: var(--gbl-font-size);
        vertical-align: convert.px2em(-3px);
    }

    table:not([class]) & {
        font-size: var(--gbl-font-size) !important;
    }
}

// Highlighted background for text
.back {
    background-color: var(--md-code-bg-color);
    box-decoration-break: clone;
    padding: 0 convert.px2em(3px);
    border-radius: convert.px2em(3px);
    font-weight: 400 !important;
}

// Quotes and Emphasis
.emq {
    @extend .em;
    font-size: calc(var(--gbl-font-size) * 0.9);
}

.quote {
    color: var(--md-default-fg-color--light) !important;
    font-size: calc(var(--gbl-font-size) * 0.9);
    font-weight: 400;

    strong {
        color: var(--md-default-fg-color--light) !important;
    }
}

.author {
    @extend .quote, .align-right;
}

/*-------------------------------------------------------
    Component-Specific Styles
-------------------------------------------------------*/

// Used for d20 test
.d20 {
    @extend .em, .nowrap;

    :is(.emojione, .twemoji, .gemoji) {
        vertical-align: convert.px2em(-3px);
    }
}

// Resources, such as Actions, spell slots, etc.
.rsc {
    @extend .em, .nowrap;
}

// Weapons
.wp {
    @extend .back, .nowrap, .disable-abbr;
    background-color: var(--md-default-bg-color-nord0) !important;
}

// Used for Calculations
.calc {
    @extend .back, .jetbrains;
}

/*-------------------------------------------------------
    Indentation & Inline Styling
-------------------------------------------------------*/

// Used in conjunction with .inl
.indt {
    text-indent: calc((var(--gbl-font-size) * 1.25) * (-1));
    padding-left: calc((var(--gbl-font-size) * 1.25) * 2);
}

// Inline element styling
.inl {
    @extend .em, .nowrap, .chev-lr;
    font-weight: 600 !important;
    display: inline-block;
    position: relative;
}

/*-------------------------------------------------------
    Icons & Sizes
-------------------------------------------------------*/

// Mixin for icon-like elements
@mixin icon-style($content, $margin-side: left) {
    content: $content;
    font-style: normal !important;
    font-weight: 400 !important;
    color: var(--md-default-fg-color--light) !important;

    @if $margin-side == left {
        margin-left: convert.px2em(4px);
    } @else {
        margin-right: convert.px2em(4px);
    }
}

// Chevrons
.chevron-right::after {
    @include icon-style("»", left);
}

.chevron-left::before {
    @include icon-style("«", right);
}

// Combined Chevrons
.chev-lr {
    @extend .chevron-left;
    @extend .chevron-right;
}

// Brackets
.bracket-right::after {
    @include icon-style("]", left);
}

.bracket-left::before {
    @include icon-style("[", right);
}

// Combined Brackets
.brack-lr {
    @extend .bracket-left;
    @extend .bracket-right;
}

.top-pad :is(.emojione, .twemoji, .gemoji) {
    vertical-align: convert.px2em(-3px);
}


// Text size variations
.x4l {
    font-size: calc(var(--gbl-font-size) * 4);
}

.x5l {
    font-size: calc(var(--gbl-font-size) * 5);
}

.x6l {
    font-size: calc(var(--gbl-font-size) * 6);
}


/*-------------------------------------------------------
    Damage Type Dynamic Classes
-------------------------------------------------------*/

$damage-types: (
    acid: #7bac02,
    cold: #4fc3f7,
    fire: #e1822e,
    posn: #37b700,
    thun: #9b7fcc,
    psyc: #dd73ac,
    lgtn: #3393e8,
    necr: #3faf4f,
    radi: #ffee58,
    force: #ff7369,
    phys: #d8dee9,
    heal: #65cdcd
);

@each $type, $color in $damage-types {
    .dmg-#{$type} {
        @extend .jetbrains;
        color: convert.hex3hsl($color) !important;
        white-space: nowrap;

        @media screen and (max-width: 720px) {
            white-space: normal;
        }
    }
}

